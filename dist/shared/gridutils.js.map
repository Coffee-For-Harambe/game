{"version":3,"sources":["gridutils.js"],"names":["buildGrid","initial","size","grid","Array","i","fill","padNum","nc","shortCode","slice","printGrid","ret","y","length","str","x","window","distanceTo","v1","v2","deltaX","Math","max","min","deltaY","rebuildInfluenceGrid","team","forEach","character","influenceGrid"],"mappings":"AAAA,OAAO,SAASA,SAAT,CAAmBC,OAAO,GAAG,CAA7B,EAAgCC,IAAI,GAAG,EAAvC,EAA2C;AAChD,QAAMC,IAAI,GAAGC,KAAK,CAACF,IAAD,CAAlB;;AACA,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAApB,EAA0BG,CAAC,EAA3B,EAA+B;AAC7BF,IAAAA,IAAI,CAACE,CAAD,CAAJ,GAAUD,KAAK,CAACF,IAAD,CAAL,CAAYI,IAAZ,CAAiBL,OAAjB,CAAV;AACD;;AAED,SAAOE,IAAP;AACD;AAED,OAAO,SAASI,MAAT,CAAgBF,CAAhB,EAAmBG,EAAnB,EAAuB;AAC5B,MAAIH,CAAC,CAACI,SAAN,EAAiB;AACfJ,IAAAA,CAAC,GAAGA,CAAC,CAACI,SAAN;AACD;;AAED,SAAO,CAAC,MAAMJ,CAAP,EAAUK,KAAV,CAAgB,CAACF,EAAjB,CAAP;AACD;AAED,OAAO,SAASG,SAAT,CAAmBR,IAAnB,EAAyBK,EAAzB,EAA6B;AAClC,MAAII,GAAG,GAAG,EAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,IAAI,CAACW,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,QAAIE,GAAG,GAAG,EAAV;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,IAAI,CAACW,MAAzB,EAAiCE,CAAC,EAAlC,EAAsC;AACpCD,MAAAA,GAAG,IAAIR,MAAM,CAACJ,IAAI,CAACU,CAAD,CAAJ,CAAQG,CAAR,CAAD,EAAaR,EAAE,IAAI,CAAnB,CAAN,GAA8B,IAArC;AACD;;AACDI,IAAAA,GAAG,IAAIG,GAAG,CAACL,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,IAAmB,IAA1B;AACD;;AAED,SAAOE,GAAP;AACD;;AAED,IAAI,OAAOK,MAAP,KAAkB,WAAtB,EAAmC;AACjCA,EAAAA,MAAM,CAACN,SAAP,GAAmBA,SAAnB;AACD;;AAED,OAAO,SAASO,UAAT,CAAoBC,EAApB,EAAwBC,EAAxB,EAA4B;AACjC,MAAIC,MAAM,GAAGC,IAAI,CAACC,GAAL,CAASJ,EAAE,CAACH,CAAZ,EAAeI,EAAE,CAACJ,CAAlB,IAAuBM,IAAI,CAACE,GAAL,CAASL,EAAE,CAACH,CAAZ,EAAeI,EAAE,CAACJ,CAAlB,CAApC;AACA,MAAIS,MAAM,GAAGH,IAAI,CAACC,GAAL,CAASJ,EAAE,CAACN,CAAZ,EAAeO,EAAE,CAACP,CAAlB,IAAuBS,IAAI,CAACE,GAAL,CAASL,EAAE,CAACN,CAAZ,EAAeO,EAAE,CAACP,CAAlB,CAApC;AACA,SAAOQ,MAAM,GAAGI,MAAhB;AACD;AAED,OAAO,SAASC,oBAAT,CAA8BC,IAA9B,EAAoC;AACzC;AACA,QAAMxB,IAAI,GAAGH,SAAS,CAAC,CAAD,CAAtB,CAFyC,CAIzC;;AACA2B,EAAAA,IAAI,CAACC,OAAL,CAAcC,SAAD,IAAe;AAC1BA,IAAAA,SAAS,CAACC,aAAV,CAAwB3B,IAAxB;AACD,GAFD;AAIA,SAAOA,IAAP;AACD","sourcesContent":["export function buildGrid(initial = 0, size = 16) {\n  const grid = Array(size)\n  for (let i = 0; i < size; i++) {\n    grid[i] = Array(size).fill(initial)\n  }\n\n  return grid\n}\n\nexport function padNum(i, nc) {\n  if (i.shortCode) {\n    i = i.shortCode\n  }\n\n  return (\"0\" + i).slice(-nc)\n}\n\nexport function printGrid(grid, nc) {\n  let ret = \"\"\n  for (let y = 0; y < grid.length; y++) {\n    let str = \"\"\n    for (let x = 0; x < grid.length; x++) {\n      str += padNum(grid[y][x], nc || 2) + \", \"\n    }\n    ret += str.slice(0, -2) + \"\\n\"\n  }\n\n  return ret\n}\n\nif (typeof window !== \"undefined\") {\n  window.printGrid = printGrid\n}\n\nexport function distanceTo(v1, v2) {\n  let deltaX = Math.max(v1.x, v2.x) - Math.min(v1.x, v2.x)\n  let deltaY = Math.max(v1.y, v2.y) - Math.min(v1.y, v2.y)\n  return deltaX + deltaY\n}\n\nexport function rebuildInfluenceGrid(team) {\n  // Reset the grid because we build it up from scratch each time to avoid conflicts\n  const grid = buildGrid(1)\n\n  // Output grid example: https://xavier.lol/i/1Z9UKtD.png\n  team.forEach((character) => {\n    character.influenceGrid(grid)\n  })\n\n  return grid\n}\n"]}