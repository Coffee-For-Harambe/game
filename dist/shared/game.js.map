{"version":3,"sources":["game.js"],"names":["Team","Character","buildGrid","Game","constructor","state","teamsTurn","selectedCharacter","turnStage","gameOver","teams","Rogue","Monk","Ranger","Warrior","Wizard","Skeleton","Dragon","forEach","team","setGame","update","getCharacterGrid","grid","characters","c","y","x","getOpposingTeam","resetTurnState","Instance","_Instance","window","GAME","advanceTurn","length","console","log","getActiveTeam","getActiveTurnStage","characterGrid","renderer","document","getElementById","style","visibility","squareClicked","square","clicked","selected","hp","canReach","moveSprite","canAttack","potentialEnemy","canReachAttack","pos","attack","alert","confirm"],"mappings":"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","sourcesContent":["import Team from \"./team\"\nimport Character from \"./character\"\nimport { buildGrid } from \"./gridutils\"\n\nexport default class Game {\n  constructor() {\n    this.state = {\n      teamsTurn: 0,\n      selectedCharacter: null,\n      turnStage: \"Moving\",\n      gameOver: false,\n    }\n\n    this.teams = []\n    this.teams[0] = new Team([\n      new Character.Rogue(1, 14),\n      new Character.Monk(4, 14),\n      new Character.Ranger(7, 14),\n      new Character.Warrior(10, 14),\n      new Character.Wizard(13, 14),\n    ])\n\n    this.teams[1] = new Team([\n      new Character.Skeleton(2, 1),\n      new Character.Skeleton(3, 1),\n      new Character.Skeleton(8, 2),\n      new Character.Dragon(7, 1),\n\n      new Character.Skeleton(13, 1),\n      new Character.Skeleton(12, 1),\n    ])\n\n    this.teams.forEach((team) => {\n      team.setGame(this)\n    })\n\n    this.update()\n  }\n\n  getCharacterGrid() {\n    const grid = buildGrid()\n    this.teams.forEach((team) => {\n      team.characters.forEach((c) => {\n        grid[c.y][c.x] = c\n      })\n    })\n\n    return grid\n  }\n\n  // createInitialState() {}\n\n  getOpposingTeam(team) {\n    if (team == this.teams[0]) {\n      return this.teams[1]\n    } else if (team == this.teams[1]) {\n      return this.teams[0]\n    }\n  }\n\n  resetTurnState() {\n    this.state.selectedCharacter = null\n    this.state.turnStage = \"Moving\"\n  }\n\n  static _Instance = null\n  static get Instance() {\n    if (!Game._Instance) {\n      Game._Instance = new Game()\n      window.GAME = Game._Instance\n    }\n\n    return Game._Instance\n  }\n\n  advanceTurn() {\n    this.state.teamsTurn = (this.state.teamsTurn + 1) % this.teams.length\n    console.log(\"Next teams turn\")\n    this.resetTurnState()\n    this.update()\n  }\n\n  getActiveTeam() {\n    return this.teams[this.state.teamsTurn]\n  }\n\n  getActiveTurnStage() {\n    return this.teams[this.state.turnStage]\n  }\n\n  update() {\n    this.teams.forEach((team) => team.update())\n    this.characterGrid = this.getCharacterGrid()\n    if (this.renderer) {\n      this.renderer.update()\n    }\n    if (this.teams[0].characters.length <= 0) {\n      this.state.gameOver = 0\n    } else if (this.teams[1].characters.length <= 0) {\n      this.state.gameOver = 1\n    }\n    if (this.state.gameOver) {\n      document.getElementById(\"lose\").style.visibility =\n        this.state.gameOver == 0 ? \"visible\" : \"hidden\"\n      document.getElementById(\"win\").style.visibility =\n        this.state.gameOver == 1 ? \"visible\" : \"hidden\"\n    }\n  }\n\n  // export function distanceTo(v1, v2) {\n  //   let distance = v2.y - v1.y + (v2.x - v2.x)\n  //   return distance\n  // }\n\n  squareClicked(square) {\n    let x, y\n    let clicked\n\n    const state = this.state\n    const selected = state.selectedCharacter\n\n    if (square) {\n      x = square.x\n      y = square.y\n      clicked = this.characterGrid[y][x]\n    }\n\n    if (state.turnStage == \"Moving\") {\n      if (clicked && clicked.team == this.getActiveTeam()) {\n        if (clicked.hp > 0) {\n          state.selectedCharacter = clicked\n        }\n      } else if (selected !== null) {\n        if (square == null) {\n          state.selectedCharacter = null\n        } else {\n          if (selected.canReach(square) && !clicked) {\n            selected.moveSprite(square)\n\n            let canAttack = false\n            for (let potentialEnemy of selected.getOpposingTeam().characters) {\n              if (selected.canReachAttack(potentialEnemy.pos)) {\n                canAttack = true\n                break\n              }\n            }\n\n            if (canAttack) {\n              state.turnStage = \"Attacking\"\n            } else {\n              this.advanceTurn()\n            }\n          } else {\n            if (clicked && clicked.team != selected.team && selected.canReachAttack(square)) {\n              selected.attack(clicked)\n              this.advanceTurn()\n              return\n            }\n            alert(\"Try moving somewhere else!\")\n          }\n        }\n      }\n    } else if (state.turnStage == \"Attacking\") {\n      if (!square || !clicked || clicked.team == this.getActiveTeam()) {\n        if (confirm(\"Are you sure you want to end your turn without attacking?\")) {\n          this.advanceTurn()\n        }\n      } else {\n        if (selected.canReachAttack(square)) {\n          selected.attack(clicked)\n          this.advanceTurn()\n        } else {\n          alert(\"You wiff, Serr! Your attacks can't reach that! :(\")\n        }\n      }\n    }\n\n    //RESET STATE//\n  }\n}\n"]}