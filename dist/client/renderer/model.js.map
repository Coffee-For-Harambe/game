{"version":3,"sources":["model.js"],"names":["Vector3","Vector2","AnimationMixer","AnimationClip","TextGeometry","Font","MeshBasicMaterial","Mesh","Color","Euler","Quaternion","AdditiveBlending","CSS3DSprite","GLTFLoader","gridToWorld","worldToGrid","WORLD_SCALE","WORLD_SCALE_V","Game","distanceTo","computePath","inspect","droidJSON","font","Model","constructor","src","scene","x","y","fullScene","pos","setWorldPos","loader","load","modelLoaded","bind","modelLoadProgress","modelLoadError","setPos","copy","mesh","position","updateMatrix","render","time","model","modelLoadedQueue","length","forEach","onModelLoaded","fn","push","children","layer","layers","set","scale","add","xhr","err","console","error","GridSquare","gridPos","state","Instance","selected","selectedCharacter","coordinates","visible","window","DEBUGGING","col","Colors","default","renderer","blockInput","material","color","start","dist","standingOnUs","characterGrid","turnStage","movement","team","attackRange","attackable","walkable","hovered","clone","multiplyScalar","enableCoordinates","text","size","height","computeBoundingBox","centerOffsetX","boundingBox","max","min","centerOffsetZ","z","textMesh","rotation","Math","PI","originalColor","floor","random","highlighted","AnimatedModel","mixer","lastDraw","update","playAnimation","anim","additive","loop","stopAllAction","clip","findByName","animations","action","clipAction","setLoop","THREE","LoopOnce","clampWhenFinished","additiveAction","stop","fadeIn","play","log","animate","SquareHighlighter","lastPos","shouldShow","square","equals","CharacterModel","character","modelName","targetPos","movementQueue","movementSpeed","idle","spotlight","transparent","opacity","blending","face","lastCharacterPos","updateHP","anySelected","ourTeam","getActiveTeam","isHuman","isComputer","canPlay","force","target","atan2","quaternion","setFromEuler","wantsTargetYaw","hp","isDying","death","setTimeout","shouldRemove","walk","shift","startingPos","yawStart","startingYaw","targetYaw","elapsed","slerp","dot","movementStart","toMove","sub","startingGridPos","attacksLeft","lasthp","diff","hpPct","maxhealth","dmgIndicator","html","hpoverlay","document","createElement","hpsprite","innerHTML"],"mappings":"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","sourcesContent":["import {\n  Vector3,\n  Vector2,\n  AnimationMixer,\n  AnimationClip,\n  TextGeometry,\n  Font,\n  MeshBasicMaterial,\n  Mesh,\n  Color,\n  Euler,\n  Quaternion,\n  AdditiveBlending,\n} from \"three\"\n\nimport { CSS3DSprite } from \"three/examples/jsm/renderers/CSS3DRenderer.js\"\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\"\nimport { gridToWorld, worldToGrid, WORLD_SCALE, WORLD_SCALE_V } from \"./3dutils\"\nimport Game from \"../../shared/game\"\nimport { distanceTo } from \"../../shared/gridutils\"\nimport { computePath } from \"../../shared/astar\"\nimport { inspect } from \"../debugutils\"\n\nimport droidJSON from \"three/examples/fonts/droid/droid_sans_regular.typeface.json\"\nconst font = new Font(droidJSON)\n\nexport class Model {\n  constructor(src, scene, x, y, fullScene = false) {\n    this.pos = new Vector3()\n    this.setWorldPos(x, y)\n    this.src = src\n    this.scene = scene\n    this.fullScene = fullScene\n\n    this.loader = new GLTFLoader()\n\n    this.loader.load(\n      \"/3d/\" + src,\n      this.modelLoaded.bind(this),\n      this.modelLoadProgress.bind(this),\n      this.modelLoadError.bind(this)\n    )\n  }\n\n  setWorldPos(x, y) {\n    this.setPos(gridToWorld(x, y))\n  }\n\n  setPos(pos) {\n    this.pos.copy(pos)\n    if (this.mesh) {\n      this.mesh.position.copy(this.pos)\n      this.mesh.updateMatrix()\n    }\n  }\n\n  modelLoadedQueue = []\n  render(time) {\n    if (this.model && this.modelLoadedQueue.length > 0) {\n      this.modelLoadedQueue.forEach((x) => x())\n      this.modelLoadedQueue = []\n    }\n  }\n\n  onModelLoaded(fn) {\n    if (this.model) {\n      fn()\n    } else {\n      this.modelLoadedQueue.push(fn)\n    }\n  }\n\n  modelLoaded(model) {\n    this.model = model\n\n    if (this.fullScene) {\n      this.mesh = model.scene\n      // this.model.scene.traverse((obj) => {\n      // obj.castShadow = true\n      // obj.receiveShadow = true\n      // })\n    } else {\n      this.mesh = model.scene.children[0]\n      // this.mesh.castShadow = true\n      // this.mesh.receiveShadow = true\n    }\n\n    if (this.layer) {\n      this.mesh.layers.set(this.layer)\n    }\n\n    model.model = this\n\n    this.mesh.model = this\n    this.mesh.scale.copy(WORLD_SCALE_V)\n\n    this.scene.add(this.mesh)\n    this.mesh.position.copy(this.pos)\n  }\n\n  modelLoadProgress(xhr) {\n    // console.log(\"Model\", this.src, (xhr.loaded / xhr.total) * 100 + \"% loaded\")\n  }\n\n  modelLoadError(err) {\n    console.error(\"Model couldn't load\", this.src, err)\n  }\n}\n\nexport class GridSquare extends Model {\n  constructor(scene, x, y) {\n    super(\"Floor_Modular.glb\", scene, x, y)\n    this.gridPos = new Vector2(x, y)\n    this.setWorldPos(x, y)\n  }\n\n  layer = 1\n\n  static Colors = {\n    default: new Color(0.181, 0.181, 0.181),\n    walkable: new Color(0.044, 0.328, 0.638),\n    highlighted: new Color(0.348, 0.348, 0.348),\n    attackRange: new Color(0.147, 0, 0),\n    attackable: new Color(0.421, 0, 0),\n  }\n\n  setPos(pos) {\n    if (this.gridPos) {\n      pos.y = -(((this.gridPos.y % 2) + (this.gridPos.x % 2)) % 2) * 0.03\n    }\n    super.setPos(pos)\n  }\n\n  modelLoaded(model) {\n    super.modelLoaded(model)\n  }\n\n  render(time) {\n    const state = Game.Instance.state\n    const selected = state.selectedCharacter\n    if (this.coordinates) {\n      this.coordinates.visible = window.DEBUGGING ? true : false\n    }\n\n    let col = GridSquare.Colors.default\n    if (Game.Instance.renderer.blockInput) {\n      this.mesh.material.color.set(col)\n      return\n    }\n\n    if (selected) {\n      const start = selected.pos\n      const dist = distanceTo(start, this.gridPos)\n      const standingOnUs = Game.Instance.characterGrid[this.gridPos.y][this.gridPos.x]\n\n      if (\n        state.turnStage == \"Moving\" &&\n        dist <= selected.movement &&\n        (!standingOnUs || standingOnUs != selected)\n      ) {\n        if (standingOnUs) {\n          if (standingOnUs.team != selected.team && dist <= selected.attackRange) {\n            col = GridSquare.Colors.attackable\n          }\n        } else {\n          col = GridSquare.Colors.walkable\n        }\n      } else if (state.turnStage == \"Attacking\" && dist <= selected.attackRange) {\n        if (standingOnUs) {\n          if (standingOnUs.team !== selected.team) {\n            col = GridSquare.Colors.attackable\n          }\n        } else {\n          col = GridSquare.Colors.attackRange\n        }\n      }\n    }\n\n    const hovered = Game.Instance.state.hovered\n    if (hovered && hovered.x == this.gridPos.x && hovered.y == this.gridPos.y) {\n      col = col.clone().multiplyScalar(1.35)\n    }\n    this.mesh.material.color.set(col)\n  }\n\n  enableCoordinates() {\n    if (!this.coordinates) {\n      const text = new TextGeometry(`(${this.gridPos.x}, ${this.gridPos.y})`, {\n        font,\n        size: WORLD_SCALE / 3,\n        height: 0.1,\n      })\n\n      text.computeBoundingBox()\n\n      const centerOffsetX = -0.5 * (text.boundingBox.max.x - text.boundingBox.min.x)\n\n      const centerOffsetZ = -0.5 * (text.boundingBox.max.z - text.boundingBox.min.z)\n\n      const textMesh = new Mesh(text, new MeshBasicMaterial({ color: 0xffffff }))\n\n      textMesh.position.x = this.pos.x + centerOffsetX\n      textMesh.position.y = this.pos.y + 0.5\n      textMesh.position.z = this.pos.z + centerOffsetZ\n\n      // textMesh.rotation.x = Math.Pi\n      textMesh.rotation.x = -Math.PI / 2\n\n      this.coordinates = textMesh\n      this.scene.add(textMesh)\n    }\n  }\n\n  modelLoaded(model) {\n    super.modelLoaded(model)\n    this.originalColor = this.mesh.material.color\n    this.mesh.rotation.set(0, ((Math.floor(Math.random() * 4) * 90) / 360) * Math.PI * 2, 0)\n  }\n}\n\nexport class AnimatedModel extends Model {\n  constructor(src, scene, x, y) {\n    super(src, scene, x, y)\n  }\n\n  modelLoaded(model) {\n    super.modelLoaded(model)\n    this.mixer = new AnimationMixer(this.mesh)\n  }\n\n  lastDraw = 0\n  render(time) {\n    super.render(time)\n    if (this.lastDraw == 0) {\n      this.lastDraw = time\n    }\n\n    this.mixer.update((time - this.lastDraw) / 1000)\n    this.lastDraw = time\n  }\n\n  playAnimation(anim, additive = false, loop = true) {\n    this.lastDraw = 0\n    if (!additive) {\n      this.mixer.stopAllAction()\n    }\n\n    const clip = AnimationClip.findByName(this.model.animations, anim)\n    if (clip) {\n      const action = this.mixer.clipAction(clip)\n      if (additive) {\n        if (!loop) {\n          action.setLoop(THREE.LoopOnce, 1)\n          action.clampWhenFinished = false\n        }\n        if (this.action) {\n          if (this.additiveAction) {\n            this.additiveAction.stop()\n          }\n          action.fadeIn(0.3)\n          this.additiveAction = action\n        } else {\n          action.play()\n        }\n      } else {\n        this.mixer.stopAllAction()\n        this.action = action\n      }\n      action.play()\n    } else {\n      console.log(\"Animation not found on model:\", anim, this.src)\n    }\n  }\n\n  animate(time) {\n    return false\n  }\n}\n\nexport class SquareHighlighter extends AnimatedModel {\n  constructor(scene) {\n    super(\"Swoosh.glb\", scene, 0, 0)\n    this.lastPos = null\n    this.shouldShow = false\n  }\n\n  modelLoaded(model) {\n    super.modelLoaded(model)\n    this.mesh.visible = false\n  }\n\n  render(time) {\n    super.render(time)\n\n    const square = Game.Instance.state.selectedCharacter?.pos\n    if (!square) {\n      this.lastPos = null\n      this.shouldShow = false\n    } else if (!this.lastPos || !square.equals(this.lastPos)) {\n      this.playAnimation(\"Swoosh\")\n      if (square) {\n        this.lastPos = square.clone()\n        this.setWorldPos(square.x, square.y)\n        this.shouldShow = true\n      } else {\n        this.lastPos = null\n        this.shouldShow = false\n      }\n    }\n\n    this.mesh.visible = this.shouldShow && !Game.Instance.renderer.blockInput\n  }\n}\n\nexport class CharacterModel extends AnimatedModel {\n  constructor(character, scene) {\n    super(character.modelName, scene, 0, 0)\n    this.character = character\n    character.model = this\n\n    // this.lastCharacterPos = new Vector2(0, 0)\n    this.targetPos = null\n\n    this.movementQueue = []\n\n    this.movementSpeed = 0.7\n  }\n\n  get gridPos() {\n    return this.character.pos.clone()\n  }\n\n  modelLoaded(model) {\n    super.modelLoaded(model)\n    this.playAnimation(this.character.animations.idle)\n\n    this.spotlight = new Model(\"Cone.glb\", this.mesh)\n    this.spotlight.onModelLoaded(() => {\n      this.spotlight.mesh.scale.set(1, 1, 1)\n      this.spotlight.mesh.layers.set(2)\n\n      this.spotlight.mesh.material.transparent = true\n      this.spotlight.mesh.material.opacity = 0.1\n      this.spotlight.mesh.material.blending = AdditiveBlending\n    })\n\n    this.setPos(gridToWorld(this.character.x, this.character.y))\n    this.face(new Vector2(7.5, 7.5), true)\n\n    this.lastCharacterPos = this.character.pos.clone()\n  }\n\n  render(time) {\n    super.render(time)\n    this.updateHP()\n    if (this.spotlight && this.spotlight.mesh) {\n      const anySelected = Game.Instance.state.selectedCharacter\n      const ourTeam = Game.Instance.getActiveTeam() == this.character.team\n      const isHuman = !this.character.team.isComputer\n      const canPlay = !Game.Instance.renderer.blockInput\n\n      this.spotlight.mesh.visible = canPlay && !anySelected && ourTeam && isHuman\n    }\n  }\n\n  face(square, force = false) {\n    const pos = worldToGrid(this.pos)\n    let target = Math.atan2(square.x - pos.x, square.y - pos.y)\n    const quaternion = new Quaternion().setFromEuler(new Euler(0, target, 0))\n    if (force) {\n      this.mesh.quaternion.copy(quaternion)\n    } else {\n      this.wantsTargetYaw = quaternion\n    }\n  }\n\n  animate(time) {\n    super.animate(time)\n    if (this.character.hp <= 0) {\n      if (!this.isDying) {\n        this.isDying = true\n        this.playAnimation(this.character.animations.death, false, false)\n        setTimeout(() => {\n          this.shouldRemove = true\n        }, 1000)\n      }\n      return true\n    }\n\n    if (!this.lastCharacterPos) {\n      return\n    }\n\n    if (!this.character.pos.equals(this.lastCharacterPos)) {\n      inspect(this)\n      this.playAnimation(this.character.animations.walk)\n      this.movementQueue = computePath(\n        this.lastCharacterPos.clone(),\n        this.character.pos.clone(),\n        this.character\n      )\n      this.lastCharacterPos = this.character.pos.clone()\n    }\n\n    if (!this.targetPos && this.movementQueue.length) {\n      const pos = this.movementQueue.shift()\n      this.targetPos = gridToWorld(pos.x, pos.y)\n      this.startingPos = this.pos.clone()\n      this.face(pos)\n    }\n\n    if (this.wantsTargetYaw) {\n      this.yawStart = time\n      this.startingYaw = this.mesh.quaternion.clone()\n      this.targetYaw = this.wantsTargetYaw\n\n      this.wantsTargetYaw = null\n    }\n\n    if (this.targetYaw) {\n      const elapsed = Math.min(1, (time - this.yawStart) / 1000 / (this.movementSpeed / 2))\n\n      this.mesh.quaternion.copy(this.startingYaw)\n      this.mesh.quaternion.slerp(this.targetYaw, elapsed)\n\n      if (elapsed == 1 || this.mesh.quaternion.dot(this.targetYaw) > 0.999) {\n        this.targetYaw = null\n        this.yawStart = null\n      } else {\n        return true\n      }\n    }\n\n    if (this.targetPos) {\n      if (!this.movementStart) {\n        this.movementStart = time\n      }\n\n      const elapsed = Math.min(1, (time - this.movementStart) / 1000 / this.movementSpeed)\n      const toMove = this.targetPos.clone().sub(this.startingPos.clone()).multiplyScalar(elapsed)\n      this.setPos(toMove.add(this.startingPos))\n      if (elapsed == 1) {\n        this.targetPos = null\n        this.movementStart = null\n        this.startingGridPos = null\n\n        if (!this.movementQueue.length) {\n          this.playAnimation(this.character.animations.idle)\n        }\n      }\n\n      return true\n    }\n\n    if (this.character.attacksLeft) {\n      return true\n    }\n    return false\n  }\n\n  updateHP() {\n    if (this.lasthp != this.character.hp) {\n      let diff = 0\n      if (this.lasthp) {\n        diff = Math.floor(this.lasthp - this.character.hp)\n      }\n      this.lasthp = this.character.hp\n\n      const hpPct = (this.character.hp / this.character.maxhealth) * 100\n      const dmgIndicator = diff > 0 ? `<div class=\"dmgindicator\">-${diff}</div>` : \"\"\n\n      const html = `\n        <div class=\"charoverlay\">\n          <div class=\"hpbar\">\n            <div class=\"hp\" style=\"width: ${hpPct}%\"></div>\n          </div>\n          ${dmgIndicator}\n        </div>\n      `\n\n      if (!this.hpoverlay) {\n        this.hpoverlay = document.createElement(\"div\")\n        this.hpsprite = new CSS3DSprite(this.hpoverlay)\n        this.hpsprite.scale.set(0.25 / 4, 0.25 / 4, 0.25 / 4)\n        // this.hpsprite.position.set(0, -0.05 * WORLD_SCALE, 0)\n        this.hpsprite.position.set(0, 3.5, 0)\n        this.mesh.add(this.hpsprite)\n      }\n\n      this.hpoverlay.innerHTML = html\n    }\n  }\n}\n"]}