{"version":3,"sources":["3d.js"],"names":["THREE","OrbitControls","RGBELoader","GLTFLoader","CSS3DRenderer","inspect","stopInspecting","Game","Model","AnimatedModel","GridSquare","SquareHighlighter","CharacterModel","gridToWorld","WORLD_SCALE","buildGrid","window","Renderer","constructor","game","Raycaster","renderer","canvas","document","getElementById","debug","scene","setupScene","camera","setupCamera","setupRenderer","setupHDR","setupGrid","setupControls","addEventListener","onWindowResize","bind","onMouseDown","onMouseMoved","onMouseUp","ring","scenery","onModelLoaded","x","mesh","frustumCulled","fadable","getObjectByName","update","redraw","render","time","lastFrame","frameInterval","DEBUGGING","innerHTML","state","turnStage","selectedCharacter","debugStr","teamsTurn","teams","characters","map","c","join","toRemove","blockInput","traverse","obj","model","isAnimating","animate","shouldRemove","push","remove","dir1","controls","target","clone","sub","position","normalize","pos","Vector3","material","transparent","getWorldPosition","opacity","Math","pow","dot","cssrenderer","requestAnimationFrame","forEach","team","character","Scene","PerspectiveCamera","innerWidth","innerHeight","set","layers","enable","domElement","style","top","left","bottom","right","pointerEvents","id","body","appendChild","setSize","renderSettings","antialias","WebGLRenderer","setPixelRatio","devicePixelRatio","shadowMap","enabled","type","PCFSoftShadowMap","physicallyCorrectLights","toneMapping","ACESFilmicToneMapping","toneMappingExposure","outputEncoding","sRGBEncoding","pmremGenerator","PMREMGenerator","compileEquirectangularShader","setDataType","UnsignedByteType","load","texture","envMap","fromEquirectangular","magFilter","LinearFilter","needsUpdate","background","environment","center","grid","linearGrid","y","square","enableCoordinates","aspect","updateProjectionMatrix","e","hoverTimerID","clearTimeout","setTimeout","updateHover","mouse","Vector2","clientX","clientY","raycaster","setFromCamera","intersects","intersectObjects","children","i","length","object","gridPos","hovered","hasCharacter","characterGrid","classList","toggle","squareClicked"],"mappings":"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","sourcesContent":["import * as THREE from \"three\"\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\"\nimport { RGBELoader } from \"three/examples/jsm/loaders/RGBELoader.js\"\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\"\nimport { CSS3DRenderer } from \"three/examples/jsm/renderers/CSS3DRenderer.js\"\n\nimport { inspect, stopInspecting } from \"../debugutils\"\n\nimport Game from \"../../shared/game\"\nimport { Model, AnimatedModel, GridSquare, SquareHighlighter, CharacterModel } from \"./model\"\n\nimport { gridToWorld, WORLD_SCALE } from \"./3dutils\"\n\nimport { buildGrid } from \"../../shared/gridutils\"\n\nwindow.THREE = THREE\n\nexport default class Renderer {\n  constructor(game) {\n    this.game = game\n    game.renderer = this\n\n    this.canvas = document.getElementById(\"canvas\")\n    this.debug = document.getElementById(\"debug\")\n\n    this.scene = this.setupScene()\n\n    this.camera = this.setupCamera()\n\n    this.setupRenderer()\n    this.setupHDR()\n\n    this.setupGrid()\n    this.setupControls()\n\n    window.addEventListener(\"resize\", this.onWindowResize.bind(this))\n\n    canvas.addEventListener(\"pointerdown\", this.onMouseDown.bind(this), false)\n    canvas.addEventListener(\"pointermove\", this.onMouseMoved.bind(this), false)\n    canvas.addEventListener(\"pointerup\", this.onMouseUp.bind(this), false)\n\n    this.ring = new SquareHighlighter(this.scene)\n\n    this.scenery = new Model(\"Scene.glb\", this.scene, 0, 0, true)\n    this.scenery.onModelLoaded((x) => {\n      this.scenery.mesh.frustumCulled = false\n      this.scenery.fadable = this.scenery.mesh.getObjectByName(\"FadableDecor\")\n    })\n    game.update()\n    this.redraw()\n  }\n\n  lastFrame = 0\n  frameInterval = 1000 / 30\n  render(time) {\n    this.redraw()\n\n    if (time - this.lastFrame < this.frameInterval) {\n      return\n    }\n\n    this.lastFrame = time\n\n    if (window.DEBUGGING) {\n      this.debug.innerHTML = `\n      <strong>GAME STATE:</strong>\n        <div style=\"padding-left: 1rem\">\n          turnStage: ${this.game.state.turnStage}<br/>\n          selectedCharacter: ${\n            this.game.state.selectedCharacter\n              ? this.game.state.selectedCharacter.debugStr()\n              : \"null\"\n          }<br/>\n          teamsTurn: ${this.game.state.teamsTurn}<br/>\n        </div>\n      <strong>TEAM1:</strong>\n        <div style=\"padding-left: 1rem\">\n          ${this.game.teams[0].characters.map((c) => c.debugStr()).join(\"<br />\")}\n        </div>\n      <strong>TEAM2:</strong>\n        <div style=\"padding-left: 1rem\">\n          ${this.game.teams[1].characters.map((c) => c.debugStr()).join(\"<br />\")}\n        </div>\n    `\n    }\n\n    const toRemove = []\n\n    let blockInput = false\n    this.scene.traverse((obj) => {\n      if (obj.model instanceof AnimatedModel) {\n        const isAnimating = obj.model.animate(time)\n        if (isAnimating) {\n          blockInput = true\n        }\n      }\n    })\n\n    // Traverse Scene twice to first determine blockInput and _then_ update\n    this.scene.traverse((obj) => {\n      if (obj.model instanceof Model) {\n        obj.model.render(time)\n\n        if (obj.model.shouldRemove) {\n          toRemove.push(obj)\n        }\n      }\n    })\n\n    this.blockInput = blockInput\n\n    for (let obj of toRemove) {\n      this.scene.remove(obj)\n      this.game.update()\n    }\n\n    const dir1 = this.controls.target.clone().sub(this.camera.position.clone()).normalize()\n\n    // TODO: Don't fade on elevated Y axis difference unless it also occludes\n    const pos = new THREE.Vector3()\n    if (this.scenery.fadable) {\n      this.scenery.fadable.traverse((obj) => {\n        if (obj.material) {\n          obj.material.transparent = true\n          obj.getWorldPosition(pos)\n          obj.material.opacity =\n            1 - Math.pow(this.controls.target.clone().sub(pos.clone()).normalize().dot(dir1), 3)\n        }\n      })\n    }\n\n    this.renderer.render(this.scene, this.camera)\n    this.cssrenderer.render(this.scene, this.camera)\n    this.controls.update()\n  }\n\n  redraw() {\n    requestAnimationFrame(this.render.bind(this))\n  }\n\n  update() {\n    this.game.teams.forEach((team) => {\n      team.characters.forEach((character) => {\n        if (!character.model) {\n          character.model = new CharacterModel(character, this.scene)\n        }\n      })\n    })\n  }\n\n  setupScene() {\n    const scene = new THREE.Scene()\n\n    return scene\n  }\n\n  setupCamera() {\n    // Two different types of camera are setup.\n    // const camera = new THREE.OrthographicCamera(-10, 10, 4, -4, 0.1, 1000)\n    const camera = new THREE.PerspectiveCamera(\n      16, // FOV\n      window.innerWidth / window.innerHeight, // Aspect Ratio\n\n      1, // zNear\n      16000 // zFar\n    )\n\n    camera.position.set(807, 889, 912)\n    camera.layers.enable(1)\n    camera.layers.enable(2)\n\n    return camera\n  }\n\n  setupRenderer() {\n    const cssrenderer = new CSS3DRenderer()\n    this.cssrenderer = cssrenderer\n\n    cssrenderer.domElement.style.position = \"fixed\"\n    cssrenderer.domElement.style.top = 0\n    cssrenderer.domElement.style.left = 0\n    cssrenderer.domElement.style.bottom = 0\n    cssrenderer.domElement.style.right = 0\n    cssrenderer.domElement.style.pointerEvents = \"none\"\n    cssrenderer.domElement.id = \"cssrenderer\"\n    document.body.appendChild(cssrenderer.domElement)\n    cssrenderer.setSize(window.innerWidth, window.innerHeight)\n\n    const renderSettings = {\n      canvas: this.canvas,\n      antialias: true,\n    }\n\n    const renderer = new THREE.WebGLRenderer(renderSettings)\n    this.renderer = renderer\n\n    renderer.setPixelRatio(window.devicePixelRatio)\n    renderer.setSize(window.innerWidth, window.innerHeight)\n\n    renderer.shadowMap.enabled = true\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap\n\n    renderer.physicallyCorrectLights = true\n    renderer.toneMapping = THREE.ACESFilmicToneMapping\n    // renderer.toneMapping = THREE.LinearToneMappina\n    renderer.toneMappingExposure = 1\n    // renderer.outputEncoding = THREE.LinearEncoding\n    renderer.outputEncoding = THREE.sRGBEncoding\n  }\n\n  setupHDR() {\n    const pmremGenerator = new THREE.PMREMGenerator(this.renderer)\n    pmremGenerator.compileEquirectangularShader()\n    // pmremGenerator.compileCubemapShader()\n\n    new RGBELoader()\n      .setDataType(THREE.UnsignedByteType)\n      .load(\"/images/lilienstein_1k.hdr\", (texture) => {\n        const envMap = pmremGenerator.fromEquirectangular(texture).texture\n\n        texture.magFilter = THREE.LinearFilter\n        texture.needsUpdate = true\n\n        this.scene.background = envMap\n        this.scene.environment = envMap\n      })\n  }\n\n  setupControls() {\n    const controls = new OrbitControls(this.camera, this.renderer.domElement)\n    controls.update()\n\n    const center = gridToWorld(15 / 2, 15 / 2)\n    controls.target = center\n\n    this.controls = controls\n  }\n\n  setupGrid() {\n    this.grid = buildGrid()\n    this.linearGrid = []\n\n    for (let y = 0; y < 16; y++) {\n      for (let x = 0; x < 16; x++) {\n        const square = new GridSquare(this.scene, x, y)\n        this.grid[y][x] = square\n        this.linearGrid.push(square)\n        square.enableCoordinates()\n      }\n    }\n  }\n\n  onWindowResize() {\n    this.camera.aspect = window.innerWidth / window.innerHeight\n    this.camera.updateProjectionMatrix()\n\n    this.cssrenderer.setSize(window.innerWidth, window.innerHeight)\n    this.renderer.setSize(window.innerWidth, window.innerHeight)\n  }\n\n  raycaster = new THREE.Raycaster()\n  hoverTimerID = null\n  onMouseMoved(e) {\n    if (this.hoverTimerID) {\n      window.clearTimeout(this.hoverTimerID)\n    }\n    this.hoverTimerID = setTimeout(() => {\n      this.hoverTimerID = null\n      this.updateHover(e)\n    }, 60)\n  }\n\n  updateHover(e) {\n    this.mouse = null\n\n    const mouse = new THREE.Vector2()\n    mouse.x = (e.clientX / window.innerWidth) * 2 - 1\n    mouse.y = -(e.clientY / window.innerHeight) * 2 + 1\n\n    this.raycaster.layers.set(1)\n\n    this.raycaster.setFromCamera(mouse, this.camera)\n\n    // calculate objects intersecting the picking ray\n    const intersects = this.raycaster.intersectObjects(this.scene.children)\n\n    for (let i = 0; i < intersects.length; i++) {\n      const pos = intersects[i].object?.model?.gridPos\n      if (pos) {\n        this.game.state.hovered = { x: pos.x, y: pos.y }\n        const hasCharacter = this.game.characterGrid[pos.y][pos.x]\n        this.canvas.classList.toggle(\"cursor-pointer\", hasCharacter)\n        return\n      }\n    }\n\n    this.game.state.hovered = null\n  }\n\n  onMouseDown(e) {\n    if (this.blockInput) {\n      return\n    }\n\n    this.updateHover(e)\n\n    this.mouse = new THREE.Vector2()\n    this.mouse.x = (e.clientX / window.innerWidth) * 2 - 1\n    this.mouse.y = -(e.clientY / window.innerHeight) * 2 + 1\n  }\n\n  onMouseUp(e) {\n    if (!this.mouse || this.blockInput) {\n      return\n    }\n\n    this.game.squareClicked(this.game.state.hovered)\n    inspect(this.game.state.selectedCharacter)\n  }\n}\n"]}