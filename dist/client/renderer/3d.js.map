{"version":3,"sources":["3d.js"],"names":["THREE","OrbitControls","RGBELoader","GLTFLoader","inspect","stopInspecting","Game","Model","AnimatedModel","GridSquare","SquareHighlighter","CharacterModel","gridToWorld","WORLD_SCALE","buildGrid","window","Renderer","constructor","game","Raycaster","renderer","canvas","document","getElementById","debug","scene","setupScene","camera","setupCamera","setupRenderer","setupHDR","setupGrid","setupControls","addEventListener","onWindowResize","bind","onMouseDown","onMouseMoved","onMouseUp","ring","scenery","onModelLoaded","x","mesh","frustumCulled","fadable","getObjectByName","update","redraw","render","time","innerHTML","state","turnStage","selectedCharacter","debugStr","teamsTurn","teams","characters","map","c","join","toRemove","blockInput","traverse","obj","model","isAnimating","animate","shouldRemove","push","remove","dir1","controls","target","clone","sub","position","normalize","pos","Vector3","material","transparent","getWorldPosition","opacity","Math","pow","dot","requestAnimationFrame","forEach","team","character","Scene","PerspectiveCamera","innerWidth","innerHeight","set","layers","enable","renderSettings","antialias","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","physicallyCorrectLights","toneMapping","ACESFilmicToneMapping","toneMappingExposure","outputEncoding","sRGBEncoding","pmremGenerator","PMREMGenerator","compileEquirectangularShader","setDataType","UnsignedByteType","load","texture","envMap","fromEquirectangular","magFilter","LinearFilter","needsUpdate","background","environment","domElement","center","grid","linearGrid","y","square","enableCoordinates","aspect","updateProjectionMatrix","e","mouse","Vector2","clientX","clientY","raycaster","setFromCamera","intersects","intersectObjects","children","i","length","object","gridPos","hovered","squareClicked"],"mappings":"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","sourcesContent":["import * as THREE from \"three\"\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\"\nimport { RGBELoader } from \"three/examples/jsm/loaders/RGBELoader.js\"\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\"\n\nimport { inspect, stopInspecting } from \"../debugutils\"\n\nimport Game from \"../../shared/game\"\nimport { Model, AnimatedModel, GridSquare, SquareHighlighter, CharacterModel } from \"./model\"\n\nimport { gridToWorld, WORLD_SCALE } from \"./3dutils\"\n\nimport { buildGrid } from \"../../shared/gridutils\"\n\nwindow.THREE = THREE\n\nexport default class Renderer {\n  constructor(game) {\n    this.game = game\n    game.renderer = this\n\n    this.canvas = document.getElementById(\"canvas\")\n    this.debug = document.getElementById(\"debug\")\n\n    this.scene = this.setupScene()\n\n    this.camera = this.setupCamera()\n    this.renderer = this.setupRenderer()\n    this.setupHDR()\n\n    this.setupGrid()\n    this.setupControls()\n\n    window.addEventListener(\"resize\", this.onWindowResize.bind(this))\n\n    canvas.addEventListener(\"pointerdown\", this.onMouseDown.bind(this), false)\n    canvas.addEventListener(\"pointermove\", this.onMouseMoved.bind(this), false)\n    canvas.addEventListener(\"pointerup\", this.onMouseUp.bind(this), false)\n\n    this.ring = new SquareHighlighter(this.scene)\n\n    this.scenery = new Model(\"Scene.glb\", this.scene, 0, 0, true)\n    this.scenery.onModelLoaded((x) => {\n      this.scenery.mesh.frustumCulled = false\n      this.scenery.fadable = this.scenery.mesh.getObjectByName(\"FadableDecor\")\n    })\n    game.update()\n    this.redraw()\n  }\n\n  render(time) {\n    this.debug.innerHTML = `\n      <strong>GAME STATE:</strong>\n        <div style=\"padding-left: 1rem\">\n          turnStage: ${this.game.state.turnStage}<br/>\n          selectedCharacter: ${\n            this.game.state.selectedCharacter\n              ? this.game.state.selectedCharacter.debugStr()\n              : \"null\"\n          }<br/>\n          teamsTurn: ${this.game.state.teamsTurn}<br/>\n        </div>\n      <strong>TEAM1:</strong>\n        <div style=\"padding-left: 1rem\">\n          ${this.game.teams[0].characters.map((c) => c.debugStr()).join(\"<br />\")}\n        </div>\n      <strong>TEAM2:</strong>\n        <div style=\"padding-left: 1rem\">\n          ${this.game.teams[1].characters.map((c) => c.debugStr()).join(\"<br />\")}\n        </div>\n    `\n\n    const toRemove = []\n\n    let blockInput = false\n    this.scene.traverse((obj) => {\n      if (obj.model instanceof AnimatedModel) {\n        const isAnimating = obj.model.animate(time)\n        if (isAnimating) {\n          blockInput = true\n        }\n      }\n    })\n\n    // Traverse Scene twice to first determine blockInput and _then_ update\n    this.scene.traverse((obj) => {\n      if (obj.model instanceof Model) {\n        obj.model.render(time)\n\n        if (obj.model.shouldRemove) {\n          toRemove.push(obj)\n        }\n      }\n    })\n\n    this.blockInput = blockInput\n\n    for (let obj of toRemove) {\n      this.scene.remove(obj)\n    }\n\n    const dir1 = this.controls.target.clone().sub(this.camera.position.clone()).normalize()\n\n    // TODO: Don't fade on elevated Y axis difference unless it also occludes\n    const pos = new THREE.Vector3()\n    if (this.scenery.fadable) {\n      this.scenery.fadable.traverse((obj) => {\n        if (obj.material) {\n          obj.material.transparent = true\n          obj.getWorldPosition(pos)\n          obj.material.opacity =\n            1 - Math.pow(this.controls.target.clone().sub(pos.clone()).normalize().dot(dir1), 3)\n        }\n      })\n    }\n\n    this.redraw()\n\n    this.renderer.render(this.scene, this.camera)\n    this.controls.update()\n  }\n\n  redraw() {\n    requestAnimationFrame(this.render.bind(this))\n  }\n\n  update() {\n    this.game.teams.forEach((team) => {\n      team.characters.forEach((character) => {\n        if (!character.model) {\n          character.model = new CharacterModel(character, this.scene)\n        }\n      })\n    })\n  }\n\n  setupScene() {\n    const scene = new THREE.Scene()\n\n    return scene\n  }\n\n  setupCamera() {\n    // Two different types of camera are setup.\n    // const camera = new THREE.OrthographicCamera(-10, 10, 4, -4, 0.1, 1000)\n    const camera = new THREE.PerspectiveCamera(\n      16, // FOV\n      window.innerWidth / window.innerHeight, // Aspect Ratio\n\n      1, // zNear\n      16000 // zFar\n    )\n\n    camera.position.set(807, 889, 912)\n    camera.layers.enable(1)\n\n    return camera\n  }\n\n  setupRenderer() {\n    const renderSettings = {\n      canvas: this.canvas,\n      antialias: true,\n    }\n\n    const renderer = new THREE.WebGLRenderer(renderSettings)\n    renderer.setPixelRatio(window.devicePixelRatio)\n    renderer.setSize(window.innerWidth, window.innerHeight)\n\n    renderer.physicallyCorrectLights = true\n    renderer.toneMapping = THREE.ACESFilmicToneMapping\n    // renderer.toneMapping = THREE.LinearToneMappina\n    renderer.toneMappingExposure = 1\n    // renderer.outputEncoding = THREE.LinearEncoding\n    renderer.outputEncoding = THREE.sRGBEncoding\n\n    return renderer\n  }\n\n  setupHDR() {\n    const pmremGenerator = new THREE.PMREMGenerator(this.renderer)\n    pmremGenerator.compileEquirectangularShader()\n    // pmremGenerator.compileCubemapShader()\n\n    new RGBELoader()\n      .setDataType(THREE.UnsignedByteType)\n      .load(\"/images/lilienstein_1k.hdr\", (texture) => {\n        const envMap = pmremGenerator.fromEquirectangular(texture).texture\n\n        texture.magFilter = THREE.LinearFilter\n        texture.needsUpdate = true\n\n        this.scene.background = envMap\n        this.scene.environment = envMap\n      })\n  }\n\n  setupControls() {\n    const controls = new OrbitControls(this.camera, this.renderer.domElement)\n    controls.update()\n\n    const center = gridToWorld(15 / 2, 15 / 2)\n    controls.target = center\n\n    this.controls = controls\n  }\n\n  setupGrid() {\n    this.grid = buildGrid()\n    this.linearGrid = []\n\n    for (let y = 0; y < 16; y++) {\n      for (let x = 0; x < 16; x++) {\n        const square = new GridSquare(this.scene, x, y)\n        this.grid[y][x] = square\n        this.linearGrid.push(square)\n        square.enableCoordinates()\n      }\n    }\n  }\n\n  onWindowResize() {\n    this.camera.aspect = window.innerWidth / window.innerHeight\n    this.camera.updateProjectionMatrix()\n\n    this.renderer.setSize(window.innerWidth, window.innerHeight)\n  }\n\n  raycaster = new THREE.Raycaster()\n  onMouseMoved(e) {\n    this.mouse = null\n\n    const mouse = new THREE.Vector2()\n    mouse.x = (e.clientX / window.innerWidth) * 2 - 1\n    mouse.y = -(e.clientY / window.innerHeight) * 2 + 1\n\n    this.raycaster.layers.set(1)\n\n    this.raycaster.setFromCamera(mouse, this.camera)\n\n    // calculate objects intersecting the picking ray\n    const intersects = this.raycaster.intersectObjects(this.scene.children)\n\n    for (let i = 0; i < intersects.length; i++) {\n      if (intersects[i].object.model instanceof GridSquare) {\n        const gridPos = intersects[i].object.model.gridPos\n        if (gridPos) {\n          this.game.state.hovered = { x: gridPos.x, y: gridPos.y }\n          return\n        }\n      }\n    }\n\n    this.game.state.hovered = null\n  }\n\n  onMouseDown(e) {\n    if (this.blockInput) {\n      return\n    }\n\n    this.mouse = new THREE.Vector2()\n    this.mouse.x = (e.clientX / window.innerWidth) * 2 - 1\n    this.mouse.y = -(e.clientY / window.innerHeight) * 2 + 1\n  }\n\n  onMouseUp(e) {\n    if (!this.mouse || this.blockInput) {\n      return\n    }\n\n    this.game.squareClicked(this.game.state.hovered)\n    inspect(this.game.state.selectedCharacter)\n  }\n}\n"]}