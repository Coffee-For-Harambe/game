{"version":3,"file":"RGBELoader.js","sources":["../../../../../../../node_modules/three/examples/jsm/loaders/RGBELoader.js"],"sourcesContent":["import {\n\tDataTextureLoader,\n\tDataUtils,\n\tFloatType,\n\tHalfFloatType,\n\tLinearEncoding,\n\tLinearFilter,\n\tNearestFilter,\n\tRGBEEncoding,\n\tRGBEFormat,\n\tRGBFormat,\n\tUnsignedByteType\n} from '../../../build/three.module.js';\n\n// https://github.com/mrdoob/three.js/issues/5552\n// http://en.wikipedia.org/wiki/RGBE_image_format\n\nvar RGBELoader = function ( manager ) {\n\n\tDataTextureLoader.call( this, manager );\n\n\tthis.type = UnsignedByteType;\n\n};\n\nRGBELoader.prototype = Object.assign( Object.create( DataTextureLoader.prototype ), {\n\n\tconstructor: RGBELoader,\n\n\t// adapted from http://www.graphics.cornell.edu/~bjw/rgbe.html\n\n\tparse: function ( buffer ) {\n\n\t\tvar\n\t\t\t/* return codes for rgbe routines */\n\t\t\t//RGBE_RETURN_SUCCESS = 0,\n\t\t\tRGBE_RETURN_FAILURE = - 1,\n\n\t\t\t/* default error routine.  change this to change error handling */\n\t\t\trgbe_read_error = 1,\n\t\t\trgbe_write_error = 2,\n\t\t\trgbe_format_error = 3,\n\t\t\trgbe_memory_error = 4,\n\t\t\trgbe_error = function ( rgbe_error_code, msg ) {\n\n\t\t\t\tswitch ( rgbe_error_code ) {\n\n\t\t\t\t\tcase rgbe_read_error: console.error( 'THREE.RGBELoader Read Error: ' + ( msg || '' ) );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase rgbe_write_error: console.error( 'THREE.RGBELoader Write Error: ' + ( msg || '' ) );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase rgbe_format_error: console.error( 'THREE.RGBELoader Bad File Format: ' + ( msg || '' ) );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\tcase rgbe_memory_error: console.error( 'THREE.RGBELoader: Error: ' + ( msg || '' ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn RGBE_RETURN_FAILURE;\n\n\t\t\t},\n\n\t\t\t/* offsets to red, green, and blue components in a data (float) pixel */\n\t\t\t//RGBE_DATA_RED = 0,\n\t\t\t//RGBE_DATA_GREEN = 1,\n\t\t\t//RGBE_DATA_BLUE = 2,\n\n\t\t\t/* number of floats per pixel, use 4 since stored in rgba image format */\n\t\t\t//RGBE_DATA_SIZE = 4,\n\n\t\t\t/* flags indicating which fields in an rgbe_header_info are valid */\n\t\t\tRGBE_VALID_PROGRAMTYPE = 1,\n\t\t\tRGBE_VALID_FORMAT = 2,\n\t\t\tRGBE_VALID_DIMENSIONS = 4,\n\n\t\t\tNEWLINE = '\\n',\n\n\t\t\tfgets = function ( buffer, lineLimit, consume ) {\n\n\t\t\t\tlineLimit = ! lineLimit ? 1024 : lineLimit;\n\t\t\t\tvar p = buffer.pos,\n\t\t\t\t\ti = - 1, len = 0, s = '', chunkSize = 128,\n\t\t\t\t\tchunk = String.fromCharCode.apply( null, new Uint16Array( buffer.subarray( p, p + chunkSize ) ) )\n\t\t\t\t;\n\t\t\t\twhile ( ( 0 > ( i = chunk.indexOf( NEWLINE ) ) ) && ( len < lineLimit ) && ( p < buffer.byteLength ) ) {\n\n\t\t\t\t\ts += chunk; len += chunk.length;\n\t\t\t\t\tp += chunkSize;\n\t\t\t\t\tchunk += String.fromCharCode.apply( null, new Uint16Array( buffer.subarray( p, p + chunkSize ) ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( - 1 < i ) {\n\n\t\t\t\t\t/*for (i=l-1; i>=0; i--) {\n\t\t\t\t\t\tbyteCode = m.charCodeAt(i);\n\t\t\t\t\t\tif (byteCode > 0x7f && byteCode <= 0x7ff) byteLen++;\n\t\t\t\t\t\telse if (byteCode > 0x7ff && byteCode <= 0xffff) byteLen += 2;\n\t\t\t\t\t\tif (byteCode >= 0xDC00 && byteCode <= 0xDFFF) i--; //trail surrogate\n\t\t\t\t\t}*/\n\t\t\t\t\tif ( false !== consume ) buffer.pos += len + i + 1;\n\t\t\t\t\treturn s + chunk.slice( 0, i );\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t},\n\n\t\t\t/* minimal header reading.  modify if you want to parse more information */\n\t\t\tRGBE_ReadHeader = function ( buffer ) {\n\n\t\t\t\tvar line, match,\n\n\t\t\t\t\t// regexes to parse header info fields\n\t\t\t\t\tmagic_token_re = /^#\\?(\\S+)/,\n\t\t\t\t\tgamma_re = /^\\s*GAMMA\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n\t\t\t\t\texposure_re = /^\\s*EXPOSURE\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n\t\t\t\t\tformat_re = /^\\s*FORMAT=(\\S+)\\s*$/,\n\t\t\t\t\tdimensions_re = /^\\s*\\-Y\\s+(\\d+)\\s+\\+X\\s+(\\d+)\\s*$/,\n\n\t\t\t\t\t// RGBE format header struct\n\t\t\t\t\theader = {\n\n\t\t\t\t\t\tvalid: 0, /* indicate which fields are valid */\n\n\t\t\t\t\t\tstring: '', /* the actual header string */\n\n\t\t\t\t\t\tcomments: '', /* comments found in header */\n\n\t\t\t\t\t\tprogramtype: 'RGBE', /* listed at beginning of file to identify it after \"#?\". defaults to \"RGBE\" */\n\n\t\t\t\t\t\tformat: '', /* RGBE format, default 32-bit_rle_rgbe */\n\n\t\t\t\t\t\tgamma: 1.0, /* image has already been gamma corrected with given gamma. defaults to 1.0 (no correction) */\n\n\t\t\t\t\t\texposure: 1.0, /* a value of 1.0 in an image corresponds to <exposure> watts/steradian/m^2. defaults to 1.0 */\n\n\t\t\t\t\t\twidth: 0, height: 0 /* image dimensions, width/height */\n\n\t\t\t\t\t};\n\n\t\t\t\tif ( buffer.pos >= buffer.byteLength || ! ( line = fgets( buffer ) ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_read_error, 'no header found' );\n\n\t\t\t\t}\n\n\t\t\t\t/* if you want to require the magic token then uncomment the next line */\n\t\t\t\tif ( ! ( match = line.match( magic_token_re ) ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'bad initial token' );\n\n\t\t\t\t}\n\n\t\t\t\theader.valid |= RGBE_VALID_PROGRAMTYPE;\n\t\t\t\theader.programtype = match[ 1 ];\n\t\t\t\theader.string += line + '\\n';\n\n\t\t\t\twhile ( true ) {\n\n\t\t\t\t\tline = fgets( buffer );\n\t\t\t\t\tif ( false === line ) break;\n\t\t\t\t\theader.string += line + '\\n';\n\n\t\t\t\t\tif ( '#' === line.charAt( 0 ) ) {\n\n\t\t\t\t\t\theader.comments += line + '\\n';\n\t\t\t\t\t\tcontinue; // comment line\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( gamma_re ) ) {\n\n\t\t\t\t\t\theader.gamma = parseFloat( match[ 1 ], 10 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( exposure_re ) ) {\n\n\t\t\t\t\t\theader.exposure = parseFloat( match[ 1 ], 10 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( format_re ) ) {\n\n\t\t\t\t\t\theader.valid |= RGBE_VALID_FORMAT;\n\t\t\t\t\t\theader.format = match[ 1 ];//'32-bit_rle_rgbe';\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( dimensions_re ) ) {\n\n\t\t\t\t\t\theader.valid |= RGBE_VALID_DIMENSIONS;\n\t\t\t\t\t\theader.height = parseInt( match[ 1 ], 10 );\n\t\t\t\t\t\theader.width = parseInt( match[ 2 ], 10 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( header.valid & RGBE_VALID_FORMAT ) && ( header.valid & RGBE_VALID_DIMENSIONS ) ) break;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! ( header.valid & RGBE_VALID_FORMAT ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'missing format specifier' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! ( header.valid & RGBE_VALID_DIMENSIONS ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'missing image size specifier' );\n\n\t\t\t\t}\n\n\t\t\t\treturn header;\n\n\t\t\t},\n\n\t\t\tRGBE_ReadPixels_RLE = function ( buffer, w, h ) {\n\n\t\t\t\tvar data_rgba, offset, pos, count, byteValue,\n\t\t\t\t\tscanline_buffer, ptr, ptr_end, i, l, off, isEncodedRun,\n\t\t\t\t\tscanline_width = w, num_scanlines = h, rgbeStart\n\t\t\t\t;\n\n\t\t\t\tif (\n\t\t\t\t\t// run length encoding is not allowed so read flat\n\t\t\t\t\t( ( scanline_width < 8 ) || ( scanline_width > 0x7fff ) ) ||\n\t\t\t\t\t// this file is not run length encoded\n\t\t\t\t\t( ( 2 !== buffer[ 0 ] ) || ( 2 !== buffer[ 1 ] ) || ( buffer[ 2 ] & 0x80 ) )\n\t\t\t\t) {\n\n\t\t\t\t\t// return the flat buffer\n\t\t\t\t\treturn new Uint8Array( buffer );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scanline_width !== ( ( buffer[ 2 ] << 8 ) | buffer[ 3 ] ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'wrong scanline width' );\n\n\t\t\t\t}\n\n\t\t\t\tdata_rgba = new Uint8Array( 4 * w * h );\n\n\t\t\t\tif ( ! data_rgba.length ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_memory_error, 'unable to allocate buffer space' );\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0; pos = 0; ptr_end = 4 * scanline_width;\n\t\t\t\trgbeStart = new Uint8Array( 4 );\n\t\t\t\tscanline_buffer = new Uint8Array( ptr_end );\n\n\t\t\t\t// read in each successive scanline\n\t\t\t\twhile ( ( num_scanlines > 0 ) && ( pos < buffer.byteLength ) ) {\n\n\t\t\t\t\tif ( pos + 4 > buffer.byteLength ) {\n\n\t\t\t\t\t\treturn rgbe_error( rgbe_read_error );\n\n\t\t\t\t\t}\n\n\t\t\t\t\trgbeStart[ 0 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 1 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 2 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 3 ] = buffer[ pos ++ ];\n\n\t\t\t\t\tif ( ( 2 != rgbeStart[ 0 ] ) || ( 2 != rgbeStart[ 1 ] ) || ( ( ( rgbeStart[ 2 ] << 8 ) | rgbeStart[ 3 ] ) != scanline_width ) ) {\n\n\t\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'bad rgbe scanline format' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// read each of the four channels for the scanline into the buffer\n\t\t\t\t\t// first red, then green, then blue, then exponent\n\t\t\t\t\tptr = 0;\n\t\t\t\t\twhile ( ( ptr < ptr_end ) && ( pos < buffer.byteLength ) ) {\n\n\t\t\t\t\t\tcount = buffer[ pos ++ ];\n\t\t\t\t\t\tisEncodedRun = count > 128;\n\t\t\t\t\t\tif ( isEncodedRun ) count -= 128;\n\n\t\t\t\t\t\tif ( ( 0 === count ) || ( ptr + count > ptr_end ) ) {\n\n\t\t\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'bad scanline data' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( isEncodedRun ) {\n\n\t\t\t\t\t\t\t// a (encoded) run of the same value\n\t\t\t\t\t\t\tbyteValue = buffer[ pos ++ ];\n\t\t\t\t\t\t\tfor ( i = 0; i < count; i ++ ) {\n\n\t\t\t\t\t\t\t\tscanline_buffer[ ptr ++ ] = byteValue;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//ptr += count;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// a literal-run\n\t\t\t\t\t\t\tscanline_buffer.set( buffer.subarray( pos, pos + count ), ptr );\n\t\t\t\t\t\t\tptr += count; pos += count;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\t// now convert data from buffer into rgba\n\t\t\t\t\t// first red, then green, then blue, then exponent (alpha)\n\t\t\t\t\tl = scanline_width; //scanline_buffer.byteLength;\n\t\t\t\t\tfor ( i = 0; i < l; i ++ ) {\n\n\t\t\t\t\t\toff = 0;\n\t\t\t\t\t\tdata_rgba[ offset ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 1 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 2 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 3 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toffset += 4;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnum_scanlines --;\n\n\t\t\t\t}\n\n\t\t\t\treturn data_rgba;\n\n\t\t\t};\n\n\t\tvar RGBEByteToRGBFloat = function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\t\tvar e = sourceArray[ sourceOffset + 3 ];\n\t\t\tvar scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\t\tdestArray[ destOffset + 0 ] = sourceArray[ sourceOffset + 0 ] * scale;\n\t\t\tdestArray[ destOffset + 1 ] = sourceArray[ sourceOffset + 1 ] * scale;\n\t\t\tdestArray[ destOffset + 2 ] = sourceArray[ sourceOffset + 2 ] * scale;\n\n\t\t};\n\n\t\tvar RGBEByteToRGBHalf = function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\t\tvar e = sourceArray[ sourceOffset + 3 ];\n\t\t\tvar scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\t\tdestArray[ destOffset + 0 ] = DataUtils.toHalfFloat( sourceArray[ sourceOffset + 0 ] * scale );\n\t\t\tdestArray[ destOffset + 1 ] = DataUtils.toHalfFloat( sourceArray[ sourceOffset + 1 ] * scale );\n\t\t\tdestArray[ destOffset + 2 ] = DataUtils.toHalfFloat( sourceArray[ sourceOffset + 2 ] * scale );\n\n\t\t};\n\n\t\tvar byteArray = new Uint8Array( buffer );\n\t\tbyteArray.pos = 0;\n\t\tvar rgbe_header_info = RGBE_ReadHeader( byteArray );\n\n\t\tif ( RGBE_RETURN_FAILURE !== rgbe_header_info ) {\n\n\t\t\tvar w = rgbe_header_info.width,\n\t\t\t\th = rgbe_header_info.height,\n\t\t\t\timage_rgba_data = RGBE_ReadPixels_RLE( byteArray.subarray( byteArray.pos ), w, h );\n\n\t\t\tif ( RGBE_RETURN_FAILURE !== image_rgba_data ) {\n\n\t\t\t\tswitch ( this.type ) {\n\n\t\t\t\t\tcase UnsignedByteType:\n\n\t\t\t\t\t\tvar data = image_rgba_data;\n\t\t\t\t\t\tvar format = RGBEFormat; // handled as THREE.RGBAFormat in shaders\n\t\t\t\t\t\tvar type = UnsignedByteType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase FloatType:\n\n\t\t\t\t\t\tvar numElements = ( image_rgba_data.length / 4 ) * 3;\n\t\t\t\t\t\tvar floatArray = new Float32Array( numElements );\n\n\t\t\t\t\t\tfor ( var j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\t\t\tRGBEByteToRGBFloat( image_rgba_data, j * 4, floatArray, j * 3 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar data = floatArray;\n\t\t\t\t\t\tvar format = RGBFormat;\n\t\t\t\t\t\tvar type = FloatType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase HalfFloatType:\n\n\t\t\t\t\t\tvar numElements = ( image_rgba_data.length / 4 ) * 3;\n\t\t\t\t\t\tvar halfArray = new Uint16Array( numElements );\n\n\t\t\t\t\t\tfor ( var j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\t\t\tRGBEByteToRGBHalf( image_rgba_data, j * 4, halfArray, j * 3 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar data = halfArray;\n\t\t\t\t\t\tvar format = RGBFormat;\n\t\t\t\t\t\tvar type = HalfFloatType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.error( 'THREE.RGBELoader: unsupported type: ', this.type );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\twidth: w, height: h,\n\t\t\t\t\tdata: data,\n\t\t\t\t\theader: rgbe_header_info.string,\n\t\t\t\t\tgamma: rgbe_header_info.gamma,\n\t\t\t\t\texposure: rgbe_header_info.exposure,\n\t\t\t\t\tformat: format,\n\t\t\t\t\ttype: type\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tsetDataType: function ( value ) {\n\n\t\tthis.type = value;\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tfunction onLoadCallback( texture, texData ) {\n\n\t\t\tswitch ( texture.type ) {\n\n\t\t\t\tcase UnsignedByteType:\n\n\t\t\t\t\ttexture.encoding = RGBEEncoding;\n\t\t\t\t\ttexture.minFilter = NearestFilter;\n\t\t\t\t\ttexture.magFilter = NearestFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase FloatType:\n\n\t\t\t\t\ttexture.encoding = LinearEncoding;\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase HalfFloatType:\n\n\t\t\t\t\ttexture.encoding = LinearEncoding;\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}\n\n\t\treturn DataTextureLoader.prototype.load.call( this, url, onLoadCallback, onProgress, onError );\n\n\t}\n\n} );\n\nexport { RGBELoader };\n"],"names":[],"mappings":"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"}